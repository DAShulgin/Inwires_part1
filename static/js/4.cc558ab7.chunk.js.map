{"version":3,"sources":["components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Profile/AvatarBlock/AvatarBlok.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/Status/Status.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/CreatePost/CreatePost.module.css","components/Profile/MyPosts/OnePost/Post.module.css","components/Profile/MyPosts/Like/Like.module.css","components/Profile/AvatarBlock/AvatarBlok.jsx","components/Profile/ProfileInfo/Status/StatusWithHooks.js","components/Profile/ProfileInfo/Contact/Contact.js","components/Profile/ProfileInfo/ProfileInfoDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/CreatePost/CreatePost.jsx","img/like.png","components/Profile/MyPosts/Like/Like.jsx","components/Profile/MyPosts/OnePost/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","meta","touched","error","children","hasError","className","style","formControl","TextArea","props","input","restProps","child","Input","createField","name","component","placeholder","validators","text","line","validate","required","value","maxLengthCreator","maxLength","length","module","exports","AvatarBlok","src","photos","notAvatar","loudButton","isOwner","type","onChange","e","target","files","savePhoto","StatusWithHooks","useState","editMode","SetEditMode","status","SetStatus","useEffect","BlockStatus","title","onDoubleClick","autoFocus","onBlur","updateStatus","Contact","contactTitle","contactValue","InfoDataReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","Object","keys","contacts","map","key","formSummaryError","ProfileInfoData","aboutMe","lookingForAJob","lookingForAJobDescription","activeteEditMode","onClick","ProfileInfo","saveProfile","fullName","initialValues","formData","then","maxLength255","AddPostFormReduxForm","addPost","Field","btnStyle","CreatePost","Osn","NewPostText","Like","item","like","Post","OnePost","textPost","MyPosts","PostItems","posts","p","id","myPosts","updatePost","MyPostsText","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","Profile","grid2","blok1","large","blok2","blok3","dopStyle","prLoudPosition","Preloader","ProfileContainer","userId","this","match","params","AthorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","React","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/4.cc558ab7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormControls.module.css'\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    return (<div className={style.formControl + ' ' + (hasError ? style.error : ' ')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        { hasError && <span>{error}</span>}\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} > <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} > <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (name, component, placeholder, validators, props = {}, text = '') => (\r\n       <span className = {style.line}><Field\r\n            name={name}\r\n            component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props} /> <span>{text}</span>\r\n       </span>      \r\n)","export const required = value => {\r\n\r\n    if (value)\r\n        return undefined;\r\n\r\n    return 'Поле пустое';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength)\r\n    return `Максимальная длина ${maxLength} символов` \r\n    \r\n    return undefined ;  \r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2V11y\",\"error\":\"FormControls_error__aVxDf\",\"line\":\"FormControls_line__2q9dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__OPa_G\",\"block1\":\"Login_block1__3-uxY\",\"formSummaryError\":\"Login_formSummaryError__2cC0g\",\"captcha\":\"Login_captcha__23FKb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loudButton\":\"AvatarBlok_loudButton__2ySe2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__vWxZx\",\"fullName\":\"ProfileInfo_fullName__3sj3O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BlockStatus\":\"Status_BlockStatus__1VJO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prLoudPosition\":\"Profile_prLoudPosition__ZI2gW\",\"grid2\":\"Profile_grid2__3exbS\",\"blok1\":\"Profile_blok1__2kVfL\",\"blok2\":\"Profile_blok2__1R1wp\",\"blok3\":\"Profile_blok3__1tGft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__QlzB_\",\"Osn\":\"MyPosts_Osn__21NQ9\",\"MyPostsText\":\"MyPosts_MyPostsText__KjF4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPost\":\"CreatePost_addPost__2-rCm\",\"btnStyle\":\"CreatePost_btnStyle__2ECuO\",\"CreatePost\":\"CreatePost_CreatePost__1OPG5\",\"NewStyle\":\"CreatePost_NewStyle__IO1cT\",\"Osn\":\"CreatePost_Osn__tD2G9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OnePost\":\"Post_OnePost__2az9a\",\"item\":\"Post_item__3XhY9\",\"textPost\":\"Post_textPost__2v4mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Like_item__CqtAT\"};","import React from 'react';\r\nimport notAvatar from '../../../img/notAvatar.png';\r\nimport style from './AvatarBlok.module.css';\r\n\r\n\r\nconst AvatarBlok = (props) => {\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n           props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <img src={props.photos != null ? props.photos : notAvatar} />\r\n        </div>\r\n        <div className={style.loudButton}> {props.isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AvatarBlok;","import React, { useEffect, useState } from 'react';\r\nimport style from './Status.module.css';\r\n\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, SetEditMode] = useState(false);\r\n    let [status, SetStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        SetStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    let activeteEditMode = () => {\r\n        if(props.isOwner === true)\r\n        SetEditMode(true)\r\n    };\r\n\r\n    let onChangeUpdateStatus = (e) => {\r\n        SetStatus(e.target.value)\r\n    };\r\n\r\n    let deactiveteEditMode = () => {\r\n        SetEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    return <div className={style.BlockStatus}  >\r\n\r\n        { !editMode && <div>\r\n        <span title='Установить статус' onDoubleClick={activeteEditMode}>{props.status !== '' ? props.status : <b>.....</b>}</span>\r\n        </div> \r\n        \r\n        }\r\n\r\n        {editMode && <div>\r\n            <input autoFocus={true} maxLength='300' onChange={onChangeUpdateStatus} onBlur={deactiveteEditMode} value={status} />\r\n        </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default StatusWithHooks;","import React from 'react';\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, TextArea } from '../../common/FormControls/FormControls';\r\nimport style from '../../Login/Login.module.css'\r\n\r\n\r\nconst ProfileInfoDataForm = ({ handleSubmit, profile, error }) => {\r\n\r\n    return <form onSubmit={handleSubmit} >\r\n        <div><b>Полное имя:</b>{createField('fullName', Input, 'Введите Полное имя', [])} </div>\r\n        <div><b>Коротко о бо мне:</b> {createField('aboutMe', TextArea, 'Введите данные о себе', [])} </div>\r\n        <div><b>Ищу работу: </b> {createField('lookingForAJob', Input, '', [], { type: 'checkbox' })} </div>\r\n        <div><b>Мои профессиональные навыки:</b>{createField('lookingForAJobDescription', TextArea, 'Введите профессиональные навыки:')}\r\n        </div>\r\n        <div><b>Контакты:</b>\r\n            {Object.keys(profile.contacts).map(key => { return <div key={key}> <b>{key}:</b> {createField('contacts.'+ key, Input, key)}  </div> })}\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <button>Сохранить</button>\r\n    </form>\r\n}\r\n\r\nconst InfoDataReduxForm = reduxForm({ form: 'EditeProfile' })(ProfileInfoDataForm);\r\n\r\nexport default InfoDataReduxForm;","import React, { useState } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport StatusWithHooks from './Status/StatusWithHooks';\r\nimport Contact from './Contact/Contact';\r\nimport InfoDataReduxForm from './ProfileInfoDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, saveProfile }) => {\r\n\r\n    let [editMode, SetEditMode] = useState(false);\r\n\r\n    const onSubmit = (formData) => {\r\n    saveProfile(formData).then( \r\n         ()=> { \r\n         SetEditMode(false);\r\n        });\r\n     }\r\n \r\n\r\n    return <div className={style.ProfileInfo}>\r\n        <div className={style.fullName}>{profile.fullName}</div>\r\n        <StatusWithHooks status={status} updateStatus={updateStatus} isOwner = {isOwner} />\r\n        {editMode\r\n            ? <InfoDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n            : <ProfileInfoData profile={profile} isOwner={isOwner} activeteEditMode={()=>{ SetEditMode(true)}} />\r\n        }\r\n    </div>\r\n}\r\n\r\nconst ProfileInfoData = ({ profile: { aboutMe, lookingForAJob, lookingForAJobDescription, contacts }, isOwner, activeteEditMode }) => {\r\n    return <>\r\n        {isOwner && <button onClick={activeteEditMode}>...Редактировать</button>}\r\n        <div><b>Коротко о бо мне:</b> {aboutMe} </div>\r\n\r\n        <div><b>Ищу работу: </b> {lookingForAJob === true ? 'Да' : 'Нет'}</div>\r\n        <div>\r\n            <b>Мои профессиональные навыки:</b> {lookingForAJobDescription}\r\n        </div>\r\n        <div><b>Контакты:</b>\r\n            {Object.keys(contacts).map(key => { return <Contact key={key} contactTitle={key} contactValue={contacts[key]} /> })}\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React, { useState } from 'react';\r\nimport style from './CreatePost.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../../../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength255 = maxLengthCreator(255);\r\n\r\nconst AddPostForm = ({ handleSubmit }) => {\r\n\r\n    return <div className={style.addPost} >\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field autoFocus={true}  name='NewPostText' component={TextArea} placeholder='Введите текст поста' validate={[required, maxLength255]} />\r\n                <div className={style.btnStyle}>\r\n                    <button>Опубликовать</button></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddPostFormReduxForm = reduxForm({ form: 'AddPostForm' })(AddPostForm);\r\n\r\n\r\nconst CreatePost = (props) => {\r\n\r\n    let [editMode, SetEditMode] = useState(false);\r\n\r\n    let activeteEditMode = () => {\r\n        SetEditMode(true)\r\n    };\r\n\r\n    let deactiveteEditMode = () => {\r\n        SetEditMode(false);\r\n    };\r\n\r\n    const addNewPost = (value) => {\r\n        props.addPost(value.NewPostText);\r\n        deactiveteEditMode();\r\n    }\r\n\r\n    return <div className = {style.Osn}>\r\n        {!editMode && <div className = {style.CreatePost} title='Создать Пост' onDoubleClick={activeteEditMode} ><span>Создать Пост</span></div>  }\r\n        {editMode && <AddPostFormReduxForm  onSubmit={addNewPost} />  }\r\n    </div>\r\n}\r\n\r\nexport default CreatePost;","export default __webpack_public_path__ + \"static/media/like.cc7db546.png\";","import React from 'react';\r\nimport style  from './Like.module.css'\r\nimport like from '../../../../img/like.png'\r\n\r\nconst Like = (props) => {\r\n\r\n    return <div className =  {style.item}>  \r\n    <div>\r\n        <span>{props.like}</span>\r\n        <span><img src = {like} /> </span>\r\n    </div>    \r\n        \r\n    </div>\r\n}\r\nexport default Like;\r\n\r\n","import React from 'react';\r\nimport style from './Post.module.css'\r\nimport notAvatar from '../../../../img/notAvatar.png'\r\nimport Like from '../Like/Like';\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className = {style.OnePost}>\r\n        <div className={style.item}>\r\n            <img src={notAvatar} />\r\n            <div className={style.textPost}> {props.text}</div>\r\n        </div>\r\n        <Like like={props.like} />\r\n    </div>\r\n}\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport CreatePost from './CreatePost/CreatePost';\r\nimport Post from './OnePost/Post';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let PostItems = props.posts.map(p => <Post key={p.id} text={p.text} like={p.like} />);\r\n\r\n    return <div>\r\n        <div className={style.myPosts}>\r\n            <CreatePost\r\n                NewPostText={props.NewPostText}\r\n                addPost={props.addPost}\r\n                updatePost={props.updatePost} />\r\n            <div className={style.Osn}>\r\n             <div className = {style.MyPostsText}>Мои посты</div>\r\n            {PostItems}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default MyPosts;\r\n","import MyPosts from './MyPosts';\r\nimport { addPostAC } from '../../../Redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { \r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nlet mapStateDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {dispatch(addPostAC(text)) },\r\n      \r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapStateDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport AvatarBlok from './AvatarBlock/AvatarBlok';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport style from './Profile.module.css'\r\nimport dopStyle from '../common/Preloader/Preloader.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\n\r\nconst Profile = ({profile, isOwner, savePhoto, status, updateStatus, saveProfile }) => {\r\n\r\n     if (!profile) {\r\n        return <div className={dopStyle.prLoudPosition} >\r\n           <Preloader />\r\n        </div>\r\n    } \r\n\r\n    return (\r\n        <div className={style.grid2} >\r\n\r\n            <div className={style.blok1}>\r\n                <AvatarBlok isOwner = {isOwner} photos={profile.photos.large} savePhoto = {savePhoto}/>\r\n            </div>\r\n            <div className={style.blok2}>\r\n                <ProfileInfo\r\n                    status = {status} \r\n                    updateStatus = {updateStatus}\r\n                    profile = {profile}\r\n                    isOwner = {isOwner}\r\n                    saveProfile = {saveProfile}\r\n                />\r\n            </div>\r\n            <div className={style.blok3}>\r\n                <MyPostsContainer />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../Redux/profile-reducer';\r\nimport {  withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        \r\n        if (!userId)  {\r\n            userId = this.props.AthorizedUserId;\r\n        if (!userId) \r\n            this.props.history.push('/login');             \r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);  \r\n    }\r\n\r\n    componentDidMount() {  \r\n        this.refreshProfile();     \r\n    }\r\n\r\n     componentDidUpdate(prevProps){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile(); \r\n        }\r\n    } \r\n\r\n\r\n    render() {\r\n        return <>\r\n            <Profile \r\n            isOwner = {!this.props.match.params.userId}\r\n            profile = {this.props.profile} \r\n            status = {this.props.status} \r\n            updateStatus = {this.props.updateStatus}\r\n            savePhoto = {this.props.savePhoto}\r\n            saveProfile = {this.props.saveProfile }/>\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        AthorizedUserId: state.auth.userId,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}