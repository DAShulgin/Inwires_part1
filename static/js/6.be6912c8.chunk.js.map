{"version":3,"sources":["components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","components/Login/Login.module.css","components/Login/Login.jsx","components/Login/LoginContainer.js"],"names":["FormControl","meta","touched","error","children","hasError","className","style","formControl","TextArea","props","input","restProps","child","Input","createField","name","component","placeholder","validators","text","line","validate","required","value","maxLengthCreator","maxLength","length","module","exports","Captha","captchaUrl","captcha","src","LoginReduxForm","reduxForm","form","handleSubmit","LoginForm","onSubmit","block1","type","formSummaryError","Login","isAuth","getProfile","userId","to","formData","LogIN","email","password","rememberMe","LoginContainer","this","AthorizedUserId","React","Component","connect","state","auth"],"mappings":"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","file":"static/js/6.be6912c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormControls.module.css'\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    return (<div className={style.formControl + ' ' + (hasError ? style.error : ' ')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        { hasError && <span>{error}</span>}\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} > <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} > <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (name, component, placeholder, validators, props = {}, text = '') => (\r\n       <span className = {style.line}><Field\r\n            name={name}\r\n            component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props} /> <span>{text}</span>\r\n       </span>      \r\n)","export const required = value => {\r\n\r\n    if (value)\r\n        return undefined;\r\n\r\n    return 'Поле пустое';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength)\r\n    return `Максимальная длина ${maxLength} символов` \r\n    \r\n    return undefined ;  \r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2V11y\",\"error\":\"FormControls_error__aVxDf\",\"line\":\"FormControls_line__2q9dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginForm\":\"Login_LoginForm__OPa_G\",\"block1\":\"Login_block1__3-uxY\",\"formSummaryError\":\"Login_formSummaryError__2cC0g\",\"captcha\":\"Login_captcha__23FKb\"};","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport style from './Login.module.css';\r\nimport { createField, Input } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Captha = ({ captchaUrl }) => {\r\n\r\n    return <>\r\n        { captchaUrl && <div className = {style.captcha}>\r\n        <img src={captchaUrl} />\r\n        { createField('captcha', Input, 'Введите символы с картинки', [required]) }\r\n        </div>\r\n        }\r\n    </>\r\n}\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return <div className={style.LoginForm}>\r\n        <form onSubmit={handleSubmit} >\r\n            <div className={style.block1}>\r\n                {createField('email', Input, 'Email', [required])}\r\n                {createField('password', Input, 'Пароль', [required], { type: 'password' })}\r\n            </div>\r\n            {createField('rememberMe', Input, null, [], { type: 'checkbox' }, 'Запомнить')}\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            <Captha captchaUrl={captchaUrl} />\r\n            <div><button>Вход</button></div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'Login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.LogIN(\r\n            formData.email,\r\n            formData.password,\r\n            formData.rememberMe,\r\n            formData.captcha\r\n        );\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        props.getProfile(props.userId);\r\n        return <Redirect to='/profile' />\r\n    }\r\n\r\n    return <>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </>\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { LogIN, getProfile } from '../.././Redux/authorization-reducer';\r\nimport Login from './Login';\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <>  \r\n            <Login \r\n            isAuth = {this.props.isAuth}\r\n            captchaUrl = {this.captchaUrl}\r\n            LogIN = {this.props.LogIN}\r\n            getProfile = {this.props.getProfile}\r\n            userId = {this.props.AthorizedUserId}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n        AthorizedUserId: state.auth.userId,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { LogIN, getProfile })(LoginContainer);"],"sourceRoot":""}