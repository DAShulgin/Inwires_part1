{"version":3,"sources":["components/common/HOC/WithRedirectComponent.jsx","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/common/FormControls/FormControls.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/AddOneMessage/AddOneMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","WithRedirectComponent","Component","RedirectComponent","this","props","to","React","connect","FormControl","meta","touched","error","children","hasError","className","style","formControl","TextArea","input","restProps","child","Input","createField","name","component","placeholder","validators","text","line","validate","required","value","maxLengthCreator","maxLength","length","module","exports","Message","textMessage","Dialog","id","Name","maxLength10","AddOneMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","AddOneMessage","NewMessage","NewMessageText","Dialogs","DialogItems","dialogs","map","d","MessageItems","messages","t","dialogsItems","dialog","messagesItems","message","updateMessage","compose","dialogPage","dispatch","addMessageAC"],"mappings":"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","file":"static/js/5.6038fefd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { isAuth: state.auth.isAuth }\r\n};\r\n\r\nexport const WithRedirectComponent = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport style from './FormControls.module.css'\r\n\r\nconst FormControl = ({ meta: {touched, error}, children }) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    return (<div className={style.formControl + ' ' + (hasError ? style.error : ' ')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        { hasError && <span>{error}</span>}\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} > <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} > <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (name, component, placeholder, validators, props = {}, text = '') => (\r\n       <span className = {style.line}><Field\r\n            name={name}\r\n            component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props} /> <span>{text}</span>\r\n       </span>      \r\n)","export const required = value => {\r\n\r\n    if (value)\r\n        return undefined;\r\n\r\n    return 'Поле пустое';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength)\r\n    return `Максимальная длина ${maxLength} символов` \r\n    \r\n    return undefined ;  \r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2V11y\",\"error\":\"FormControls_error__aVxDf\",\"line\":\"FormControls_line__2q9dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Bl7N\",\"dialogsItems\":\"Dialogs_dialogsItems__2BeU3\",\"dialog\":\"Dialogs_dialog__1gJ95\",\"messagesItems\":\"Dialogs_messagesItems__3uQ-t\",\"message\":\"Dialogs_message__FbtPB\",\"active\":\"Dialogs_active__33Ckb\"};","import React from 'react';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div>\r\n        {props.textMessage}\r\n    </div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return <div>\r\n        <NavLink to={'/dialogs/' + props.id}>{props.Name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport  {TextArea} from '../../common/FormControls/FormControls';\r\n\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddOneMessageForm = ({ handleSubmit }) => {\r\n\r\n    return <div>\r\n\r\n        <form onSubmit={handleSubmit} >\r\n            <div>\r\n                <Field name= 'NewMessageText' component= {TextArea} placeholder= 'Введите сообщение' validate = { [required, maxLength10 ]}/>\r\n            </div>\r\n            <div><button>Добавить</button></div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddOneMessageReduxForm = reduxForm({ form: 'AddOneMessage' })(AddOneMessageForm);\r\n\r\nconst AddOneMessage = (props) => {\r\n\r\n\r\n    const addNewMessage = (value) => {\r\n        props.NewMessage(value.NewMessageText);\r\n    }\r\n\r\n    return <>\r\n        <AddOneMessageReduxForm onSubmit={addNewMessage} />\r\n    </>\r\n}\r\n\r\nexport default AddOneMessage;\r\n","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport Dialog from './Dialog/Dialog';\r\nimport AddOneMessage from './AddOneMessage/AddOneMessage';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let DialogItems = props.dialogs.map(d => <Dialog key={d.id}  id = {d.id } Name={d.Name} />);\r\n    let MessageItems = props.messages.map(t => <Message key={t.id}  textMessage={t.textMessage} />);\r\n\r\n    return <div className={style.dialogs}>\r\n        <div className={style.dialogsItems}>\r\n\r\n            <div className={style.dialog}>\r\n                {DialogItems}\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className={style.messagesItems}>\r\n            <div className={style.message}>\r\n                {MessageItems}\r\n            </div>\r\n            <div>\r\n                <AddOneMessage NewMessageText={props.NewMessageText}\r\n                    NewMessage={props.NewMessage}\r\n                    updateMessage={props.updateMessage} />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Dialogs;","import { addMessageAC} from '../../Redux/dialog-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { WithRedirectComponent } from '../common/HOC/WithRedirectComponent';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogs: state.dialogPage.dialogs,\r\n        messages: state.dialogPage.messages,\r\n    }\r\n}\r\n\r\nlet mapStateDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        NewMessage: (text) => { dispatch(addMessageAC(text)); },\r\n     \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapStateDispatchToProps),\r\n    WithRedirectComponent,\r\n)(Dialogs);"],"sourceRoot":""}