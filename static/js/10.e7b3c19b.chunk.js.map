{"version":3,"sources":["components/common/HOC/WithRedirectComponent.jsx","components/Setting/Setting.module.css","components/Setting/Setting.jsx","components/Setting/SettingContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","WithRedirectComponent","Component","RedirectComponent","this","props","to","React","connect","module","exports","Setting","className","style","A1"],"mappings":"sNAIIA,EAAkB,SAACC,GACnB,MAAO,CAAEC,OAAQD,EAAME,KAAKD,SAGnBE,EAAwB,SAACC,GAAe,IAE3CC,EAF0C,4JAG5C,WACI,OAAKC,KAAKC,MAAMN,OAGT,cAACG,EAAD,eAAeE,KAAKC,QAFhB,cAAC,IAAD,CAAUC,GAAG,eALgB,GAEhBC,IAAML,WAYtC,OAFqCM,YAAQX,EAARW,CAAyBL,K,oBCnBlEM,EAAOC,QAAU,CAAC,GAAK,sB,6FCWRC,EATC,WAEZ,OACI,qBAAKC,UAAWC,IAAMC,GAAtB,SACA,8LCHON,wBAAUP,YAAsBU","file":"static/js/10.e7b3c19b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { isAuth: state.auth.isAuth }\r\n};\r\n\r\nexport const WithRedirectComponent = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"A1\":\"Setting_A1__3gk8b\"};","import React from 'react';\r\nimport style from './Setting.module.css'\r\n\r\nconst Setting = () => {\r\n\r\n    return (\r\n        <div className={style.A1} >\r\n        <h1>Страница в стадии разработки</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import { connect } from \"react-redux\";\r\nimport { WithRedirectComponent } from \"../common/HOC/WithRedirectComponent\";\r\nimport Setting from \"./Setting\";\r\n\r\nexport default connect()(WithRedirectComponent(Setting));\r\n"],"sourceRoot":""}